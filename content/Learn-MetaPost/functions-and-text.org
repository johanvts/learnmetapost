---
title: "Functions"
date: 2021-03-28T23:15:51+02:00
draft: true
---

** Functions
in this section we will define and draw a functions.
Metapost doesn't really have the concept of a function, but it has variable macros that are essentailly the same.

Lets define and draw to probablility density function of the standard normal deviation.

> vardef std_normal(expr x) = 
> e:=2.71;
> pi:=3.14;
> 1/sqrt(2*pi)*(e**-((x/2)**2))
> enddef;

notice that ** has the same precedence as * in metapost so the paraneteses are needed.

Now we can use a for loop to draw the function

> draw (-1,std_normal(-1)) for i:=-1.1 step 0.1 until 1: ..(i,std_normal(i));
> endfor;

this gets a bit long if we are drawing several functions, so lets define a macro to draw out math functions.
In order to pass macros to macro we can use 'scantokens'. This tell metapost to interpret a string as if it was a metpost command.
Of course we then have to remember to pass our macros as strings.

> vardef functionpath (expr func, a, b)=
 (a,scantokens func(a)) for i:=a step 1/(10(b-a)) until b: ..(i,scantokens func(i)) endfor;
enddef;

and replace our code with a call to this marcro:

> draw functionpath("std_normal",-1,1);

** Text

As I said in the beginning metapost is often used to make figures for latex documents, but metapost is also using latex to
typeset text. You can do some simple text as we have seen already by just putting in strings. But when you need to include variables
in your strings, or just have more control of how the text looks we use latex to compile our text into images. There are a few diffenret ways
to put input latex strings in your figures, but the one I find easiest and most powerful is the TEX.mp utility library.

TEX.mp is simply a metapost file thats is distributed with metapost, you should be able to load in into your session by including the line

> input TEX;

Once this file is loaded you can use the TEX function to typeset lables with latex commands.
For example we can add a labeled x-axis to our figure:

> drawarrow (-1.5,0)--(1.5,0);
> for i:= -1.5 step 0.5 until 1.5:
> label(TEX("$"&decimal(i)&"$"),(i,0));
> endfor

** Exercise 

- Draw a grid like this
- Draw your own math function on your grid 
- Add some labels

>grid.mp


